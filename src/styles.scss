@use "assets/variables.scss";

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$zenon-tools-primary: mat.define-palette(mat.$indigo-palette);
$zenon-tools-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$zenon-tools-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$zenon-tools-theme: mat.define-light-theme(
  (
    color: (
      primary: $zenon-tools-primary,
      accent: $zenon-tools-accent,
      warn: $zenon-tools-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($zenon-tools-theme);

* {
  font-family: Montserrat, sans-serif !important;
  font-weight: normal;
  color: white;
  letter-spacing: 0.02em;
  transition: variables.$animation-duration variables.$animation-curve;
}

.material-icons {
  font-family: "Material Icons" !important;
}

html {
  background-color: variables.$background-grey;
  height: 100%;
  overflow-y: scroll;
}

body {
  margin: 0;
  height: 100%;
}

.text-glow-white {
  text-shadow: 0 0 1.4em variables.$white-40;
}

// General input styling

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance:textfield;
}

.input-label {
  font-size: variables.$font-xs;
  font-weight: bold;
  margin-bottom: variables.$spacing-s;
  color: variables.$white-70;
}

.input-wrapper {
  display: flex;
  flex-direction: column;
  position: relative;
  justify-content: center;
}

.input-unit {
  position: absolute;
  right: variables.$spacing-m;
  font-size: variables.$font-s;
  font-weight: bold;
}

.input-field {
  background-color: variables.$tertiary-grey;
  border-radius: variables.$radius-s;
  height: 2.8em;
  border: 0;
  font-size: variables.$font-s;
  font-weight: bold;
  text-indent: variables.$spacing-m;
  transition: variables.$animation-duration variables.$animation-curve;

  &:hover {
    background-color: variables.$input-hover;
  }

  &:focus {
    background-color: variables.$input-hover;
    outline: none !important;
    box-shadow: 0 0 0.5em variables.$input-hover;
  }
}

.input-container {
  display: flex;
  flex-direction: column;
}

.input-extra-info {
  font-size: variables.$font-xs;
  color: variables.$white-50;
  margin-top: variables.$spacing-s;
}

mat-dialog-container {
  background-color: transparent !important;
  padding: 0 !important;
  overflow: hidden !important;
  border-radius: variables.$radius-l !important;
}

.tool-tip {
  background-color: #555555 !important;
}


// FA stylings
fa-icon.red path {
  fill: variables.$primary-red;
}

// mat-dialog width override
@media only screen and (max-width: 800px) {
  .cdk-overlay-pane { width: 90%; }
}

